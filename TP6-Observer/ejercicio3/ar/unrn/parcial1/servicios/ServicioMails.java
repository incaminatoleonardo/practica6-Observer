package ar.unrn.parcial1.servicios;

import java.util.Properties;

import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;

import ar.unrn.parcial1.modelo.ServiciosDeCompras;

public class ServicioMails implements ServiciosDeCompras {

	public void enviarMail(String email, String asunto, String contenido) {
		// Put recipient’s address
		String to = email;

		// Put sender’s address
		String from = "remeras@si.com";
		final String username = "ce56b9a53b0882";// username generated by Mailtrap
		final String password = "2aaf95687c1ee8";// password generated by Mailtrap

		// Paste host address from the SMTP settings tab in your Mailtrap Inbox
		String host = "smtp.mailtrap.io";

		Properties props = new Properties();

		props.put("mail.smtp.auth", "true");
		props.put("mail.smtp.starttls.enable", "true");// it’s
														// optional
														// in
														// Mailtrap

		props.put("mail.smtp.host", host);
		props.put("mail.smtp.port", "2525");// use one of the options in the SMTP settings
											// tab in your Mailtrap Inbox

		// Get the Session object.
		Session session = Session.getInstance(props, new javax.mail.Authenticator() {
			protected PasswordAuthentication getPasswordAuthentication() {
				return new PasswordAuthentication(username, password);
			}
		});

		try {
			// Create a default MimeMessage object.
			Message message = new MimeMessage(session);

			// Set From: header field
			message.setFrom(new InternetAddress(from));

			// Set To: header field
			message.setRecipients(Message.RecipientType.TO, InternetAddress.parse(to));

			// Set Subject: header field
			message.setSubject(asunto);

			// Put the content of your message
			message.setText(contenido);

			// Send message
			Transport.send(message);

			// System.out.println("Mensaje enviado con exito....");

		} catch (MessagingException e) {
			throw new RuntimeException("No se pudo enviar el email", e);
		}
	}

}
